{"version":3,"sources":["components/useLocalStorage.js","components/RoverProject.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","RoverProject","taille","settaille","direction","setdirection","X","setX","Y","setY","useKey","cb","callbackRef","useRef","useEffect","current","handle","e","code","document","addEventListener","removeEventListener","parseInt","role","className","htmlFor","id","onChange","target","type","name","Number","isNaN","tryconvert","Array","from","length","map","index","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23060562.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore =\r\n            value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./RoverProject.css\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport default function RoverProject() {\r\n  const [taille, settaille] = useLocalStorage('rover', 0);\r\n  const [direction, setdirection] = useState(\"N\");\r\n  const [X, setX] = useState(0);\r\n  const [Y, setY] = useState(0);\r\n\r\n  function useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n      callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n      function handle(e) {\r\n        if (e.code === key) {\r\n          callbackRef.current(e);\r\n        }\r\n      }\r\n      document.addEventListener(\"keypress\", handle);\r\n      return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n  }\r\n\r\n  const handleR = () => {\r\n    if (direction === \"N\") {\r\n      setdirection(\"E\");\r\n    } else if (direction === \"W\") {\r\n      setdirection(\"N\");\r\n    } else if (direction === \"S\") {\r\n      setdirection(\"W\");\r\n    } else if (direction === \"E\") {\r\n      setdirection(\"S\");\r\n    }\r\n  };\r\n\r\n  const handleL = () => {\r\n    if (direction === \"N\") {\r\n      setdirection(\"W\");\r\n    } else if (direction === \"W\") {\r\n      setdirection(\"S\");\r\n    } else if (direction === \"S\") {\r\n      setdirection(\"E\");\r\n    } else if (direction === \"E\") {\r\n      setdirection(\"N\");\r\n    }\r\n  };\r\n\r\n  const handleF = () => {\r\n    if (\r\n      direction === \"N\" &&\r\n      taille !== 0 &&\r\n      taille !== 1 &&\r\n      taille !== 2 &&\r\n      taille !== 3 &&\r\n      taille !== 4 &&\r\n      taille !== 5 &&\r\n      taille !== 6 &&\r\n      taille !== 7 &&\r\n      taille !== 8 &&\r\n      taille !== 9\r\n    ) {\r\n      settaille((taille) => taille - 10);\r\n      setX(taille % 10);\r\n      setY(parseInt(taille / 10 - 1));\r\n    } else if (\r\n      direction === \"W\" &&\r\n      taille !== 0 &&\r\n      taille !== 10 &&\r\n      taille !== 20 &&\r\n      taille !== 30 &&\r\n      taille !== 40 &&\r\n      taille !== 50 &&\r\n      taille !== 60 &&\r\n      taille !== 70 &&\r\n      taille !== 80 &&\r\n      taille !== 90\r\n    ) {\r\n      settaille((taille) => taille - 1);\r\n      setX((taille % 10) - 1);\r\n      setY(parseInt(taille / 10));\r\n\r\n    } else if (\r\n      direction === \"S\" &&\r\n      taille !== 90 &&\r\n      taille !== 91 &&\r\n      taille !== 92 &&\r\n      taille !== 93 &&\r\n      taille !== 94 &&\r\n      taille !== 95 &&\r\n      taille !== 96 &&\r\n      taille !== 97 &&\r\n      taille !== 98 &&\r\n      taille !== 99\r\n    ) {\r\n      settaille((taille) => taille + 10);\r\n      setX(taille % 10);\r\n      setY(parseInt(taille / 10 + 1));\r\n\r\n    } else if (\r\n      direction === \"E\" &&\r\n      taille !== 9 &&\r\n      taille !== 19 &&\r\n      taille !== 29 &&\r\n      taille !== 39 &&\r\n      taille !== 49 &&\r\n      taille !== 59 &&\r\n      taille !== 69 &&\r\n      taille !== 79 &&\r\n      taille !== 89 &&\r\n      taille !== 99\r\n    ) {\r\n      settaille((taille) => taille + 1);\r\n      setX((taille % 10) + 1);\r\n      setY(parseInt(taille / 10));\r\n    }\r\n  };\r\n\r\n  useKey(\"KeyR\", handleR);\r\n  useKey(\"KeyL\", handleL);\r\n  useKey(\"KeyF\", handleF);\r\n\r\n  const handleChange = (e) => {\r\n    setdirection(e.target.value);\r\n  };\r\n  const handleChoose = (e) => {\r\n    settaille(parseInt(e.target.value));\r\n  };\r\n\r\n  const tryconvert = (taille) => {\r\n    const value = parseInt(taille);\r\n    if (Number.isNaN(value)) {\r\n      return \"\";\r\n    }\r\n  };\r\n \r\n\r\n  return (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron container-fluid\">\r\n        <div className=\"container text-center\">\r\n          <h1 className=\"display-4 p-3 border-bottom bg-secondary text-white\">\r\n            Projet Rover martien\r\n          </h1>\r\n          <form className=\"form-inline justify-content-center plus\">\r\n            <div className=\"form-group text-center\">\r\n              <label htmlFor=\"direction\">\r\n                Définissez une direction au rover\r\n              </label>\r\n              <select\r\n                id=\"direction\"\r\n                className=\"form-control\"\r\n                value={direction}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"N\">North</option>\r\n                <option value=\"S\">South</option>\r\n                <option value=\"W\">West</option>\r\n                <option value=\"E\">East</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group text-center\">\r\n              <label htmlFor=\"position\">\r\n                Sélectionner une case pour placer le rover (de 0 à 99)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"position\"\r\n                id=\"position\"\r\n                className=\"form-control\"\r\n                value={taille ? taille : tryconvert(taille)}\r\n                onChange={handleChoose}\r\n              />\r\n            </div>\r\n          </form>\r\n\r\n          <h4>Voici la liste des commandes pour pouvoir déplacer le rover</h4>\r\n          <ul className=\"list-group\">\r\n            <p className=\"list-group-item \">\r\n              <strong>pour avancer tout droit : 'f'</strong>\r\n            </p>\r\n            <p className=\"list-group-item\">\r\n              <strong> Tourner le rover à droite : 'r'</strong>\r\n            </p>\r\n            <p className=\"list-group-item \">\r\n              <strong>Tourner le rover à gauche : 'l'</strong>\r\n            </p>\r\n          </ul>\r\n\r\n          <form className=\"form-inline justify-content-center plus\">\r\n            <div className=\"form-group text-center\">\r\n              <label htmlFor=\"coordonnéesx\">\r\n                Coordonnnées de X (horizontales)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"coordonnéesx\"\r\n                className=\"form-control\"\r\n                value={X}\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-center\">\r\n              <label htmlFor=\"coordonnéesy\">\r\n                Coordonnnées de Y (verticales)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"coordonnéesy\"\r\n                className=\"form-control\"\r\n                value={Y}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-grille\">\r\n        <div className=\"grille\">\r\n          {Array.from({ length: 100 }).map((item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={taille === index ? \"gridou\" : \"grid-item\"}\r\n              ></div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import './App.css';\nimport RoverProject from './components/RoverProject';\n\nfunction App() {\n  return (\n    <div>\n      <RoverProject/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}